{
  "timestamp": "2024-12-13T06:23:04.081Z",
  "functions": [
    {
      "name": "LoginPage",
      "filePath": "\\src\\app\\auth\\login\\page.tsx",
      "parameters": []
    },
    {
      "name": "RegisterPage",
      "filePath": "\\src\\app\\auth\\register\\page.tsx",
      "parameters": []
    },
    {
      "name": "MyPage",
      "filePath": "\\src\\app\\dashboard\\page.tsx",
      "parameters": []
    },
    {
      "name": "RootLayout",
      "filePath": "\\src\\app\\layout.tsx",
      "parameters": [
        {
          "name": "{\r\n  children,\r\n}",
          "type": "{\r\n  children: React.ReactNode\r\n}",
          "isOptional": false,
          "description": ""
        }
      ]
    },
    {
      "name": "MapPage",
      "filePath": "\\src\\app\\main\\dashboard\\page.tsx",
      "parameters": []
    },
    {
      "name": "CreateTreasurePage",
      "filePath": "\\src\\app\\main\\treasures\\create\\page.tsx",
      "parameters": []
    },
    {
      "name": "TreasuresPage",
      "filePath": "\\src\\app\\main\\treasures\\page.tsx",
      "parameters": []
    },
    {
      "name": "EditTreasurePage",
      "filePath": "\\src\\app\\main\\treasures\\[id]\\page.tsx",
      "parameters": [
        {
          "name": "{ params }",
          "type": "PageProps",
          "isOptional": false,
          "description": ""
        }
      ]
    },
    {
      "name": "MapPage",
      "filePath": "\\src\\app\\mapbox\\page.tsx",
      "parameters": []
    },
    {
      "name": "Home",
      "filePath": "\\src\\app\\page.tsx",
      "parameters": []
    },
    {
      "name": "AISidebarDialog",
      "filePath": "\\src\\components\\dashboard\\ai-dialog.tsx",
      "parameters": []
    },
    {
      "name": "AppSidebar",
      "filePath": "\\src\\components\\dashboard\\app-sidebar.tsx",
      "parameters": []
    },
    {
      "name": "SearchCity",
      "filePath": "\\src\\components\\dashboard\\searchcity.tsx",
      "parameters": []
    },
    {
      "name": "useSidebar",
      "filePath": "\\src\\components\\dashboard\\sidebar.tsx",
      "parameters": []
    },
    {
      "name": "Skeleton",
      "filePath": "\\src\\components\\dashboard\\skeleton.tsx",
      "parameters": [
        {
          "name": "{\r\n  className,\r\n  ...props\r\n}",
          "type": "React.HTMLAttributes<HTMLDivElement>",
          "isOptional": false,
          "description": ""
        }
      ]
    },
    {
      "name": "LoginForm",
      "filePath": "\\src\\components\\features\\auth\\login-form.tsx",
      "parameters": []
    },
    {
      "name": "authorize",
      "filePath": "\\src\\components\\features\\auth\\nextAuth.tsx",
      "parameters": [
        {
          "name": "credentials",
          "type": "any",
          "isOptional": false,
          "description": ""
        }
      ]
    },
    {
      "name": "RegisterForm",
      "filePath": "\\src\\components\\features\\auth\\register-form.tsx",
      "parameters": []
    },
    {
      "name": "MainContent",
      "filePath": "\\src\\components\\myboard\\main-content.tsx",
      "parameters": []
    },
    {
      "name": "Notes",
      "filePath": "\\src\\components\\myboard\\notes.tsx",
      "parameters": []
    },
    {
      "name": "PostCard",
      "filePath": "\\src\\components\\myboard\\post-card.tsx",
      "parameters": [
        {
          "name": "{ post }",
          "type": "PostCardProps",
          "isOptional": false,
          "description": ""
        }
      ]
    },
    {
      "name": "Repository",
      "filePath": "\\src\\components\\myboard\\repository.tsx",
      "parameters": []
    },
    {
      "name": "SearchBar",
      "filePath": "\\src\\components\\myboard\\search-bar.tsx",
      "parameters": []
    },
    {
      "name": "Providers",
      "filePath": "\\src\\components\\providers.tsx",
      "parameters": [
        {
          "name": "{ children }",
          "type": "{ children: React.ReactNode }",
          "isOptional": false,
          "description": ""
        }
      ]
    },
    {
      "name": "TreasureCard",
      "filePath": "\\src\\components\\treasures\\treasure_card.tsx",
      "parameters": [
        {
          "name": "{ treasure, onEdit, onDelete }",
          "type": "TreasureCardProps",
          "isOptional": false,
          "description": ""
        }
      ]
    },
    {
      "name": "TreasureList",
      "filePath": "\\src\\components\\treasures\\treasure_card.tsx",
      "parameters": [
        {
          "name": "{ treasures, onEdit, onDelete }",
          "type": "TreasureListProps",
          "isOptional": false,
          "description": ""
        }
      ]
    },
    {
      "name": "TreasureForm",
      "filePath": "\\src\\components\\treasures\\treasure_form.tsx",
      "parameters": [
        {
          "name": "{ initialData, onSubmit, onCancel, isLoading }",
          "type": "TreasureFormProps",
          "isOptional": false,
          "description": ""
        }
      ]
    },
    {
      "name": "TreasureList",
      "filePath": "\\src\\components\\treasures\\treasure_list.tsx",
      "parameters": [
        {
          "name": "{ treasures, onEdit, onDelete }",
          "type": "TreasureListProps",
          "isOptional": false,
          "description": ""
        }
      ]
    },
    {
      "name": "TreasureMap",
      "filePath": "\\src\\components\\treasures\\treasure_map.tsx",
      "parameters": [
        {
          "name": "{ \r\n  treasures, \r\n  onTreasureSelect, \r\n  onLocationSelect,\r\n  interactive = true,\r\n  center \r\n}",
          "type": "TreasureMapProps",
          "isOptional": false,
          "description": ""
        }
      ]
    },
    {
      "name": "Toaster",
      "filePath": "\\src\\components\\ui\\toaster.tsx",
      "parameters": []
    },
    {
      "name": "useApi",
      "filePath": "\\src\\hooks\\use-api.ts",
      "parameters": [
        {
          "name": "apiFunc",
          "type": "(...args: any[]) => Promise<T>",
          "isOptional": false,
          "description": ""
        },
        {
          "name": "options",
          "type": "UseApiOptions<T>",
          "isOptional": false,
          "description": ""
        }
      ]
    },
    {
      "name": "useIPFS",
      "filePath": "\\src\\hooks\\use-ipfs.ts",
      "parameters": []
    },
    {
      "name": "useIsMobile",
      "filePath": "\\src\\hooks\\use-mobile.tsx",
      "parameters": []
    },
    {
      "name": "genId",
      "filePath": "\\src\\hooks\\use-toast.ts",
      "parameters": []
    },
    {
      "name": "dispatch",
      "filePath": "\\src\\hooks\\use-toast.ts",
      "parameters": [
        {
          "name": "action",
          "type": "Action",
          "isOptional": false,
          "description": ""
        }
      ]
    },
    {
      "name": "toast",
      "filePath": "\\src\\hooks\\use-toast.ts",
      "parameters": [
        {
          "name": "{ ...props }",
          "type": "Toast",
          "isOptional": false,
          "description": ""
        }
      ]
    },
    {
      "name": "useToast",
      "filePath": "\\src\\hooks\\use-toast.ts",
      "parameters": []
    },
    {
      "name": "useTreasure",
      "filePath": "\\src\\hooks\\use-treasure.tsx",
      "parameters": [
        {
          "name": "id",
          "type": "string",
          "isOptional": false,
          "description": ""
        }
      ]
    },
    {
      "name": "useTreasures",
      "filePath": "\\src\\hooks\\use-treasure.tsx",
      "parameters": []
    },
    {
      "name": "getInstance",
      "filePath": "\\src\\lib\\ipfs-service.ts",
      "parameters": []
    },
    {
      "name": "uploadFile",
      "filePath": "\\src\\lib\\ipfs-service.ts",
      "parameters": [
        {
          "name": "file",
          "type": "File",
          "isOptional": false,
          "description": ""
        }
      ]
    },
    {
      "name": "uploadMetadata",
      "filePath": "\\src\\lib\\ipfs-service.ts",
      "parameters": [
        {
          "name": "metadata",
          "type": "{\r\n    name: string;\r\n    description: string;\r\n    image: string;\r\n    attributes: {\r\n      points: number;\r\n      hint: string;\r\n      latitude: number;\r\n      longitude: number;\r\n    };\r\n  }",
          "isOptional": false,
          "description": ""
        }
      ]
    },
    {
      "name": "getIpfsUrl",
      "filePath": "\\src\\lib\\ipfs-service.ts",
      "parameters": [
        {
          "name": "cid",
          "type": "string",
          "isOptional": false,
          "description": ""
        }
      ]
    },
    {
      "name": "uploadTreasureImage",
      "filePath": "\\src\\lib\\supabase.ts",
      "parameters": [
        {
          "name": "file",
          "type": "File",
          "isOptional": false,
          "description": ""
        }
      ]
    },
    {
      "name": "cn",
      "filePath": "\\src\\lib\\utils.ts",
      "parameters": [
        {
          "name": "inputs",
          "type": "ClassValue[]",
          "isOptional": false,
          "description": ""
        }
      ]
    },
    {
      "name": "processRequest",
      "filePath": "\\src\\services\\accessibility\\agent.ts",
      "parameters": [
        {
          "name": "input",
          "type": "string",
          "isOptional": false,
          "description": ""
        }
      ]
    },
    {
      "name": "generateResponse",
      "filePath": "\\src\\services\\accessibility\\agent.ts",
      "parameters": [
        {
          "name": "input",
          "type": "string",
          "isOptional": false,
          "description": ""
        },
        {
          "name": "functions",
          "type": "string[]",
          "isOptional": false,
          "description": ""
        }
      ]
    },
    {
      "name": "generateSystemPrompt",
      "filePath": "\\src\\services\\accessibility\\agent.ts",
      "parameters": [
        {
          "name": "functions",
          "type": "string[]",
          "isOptional": false,
          "description": ""
        }
      ]
    },
    {
      "name": "formatResponse",
      "filePath": "\\src\\services\\accessibility\\agent.ts",
      "parameters": [
        {
          "name": "llmResponse",
          "type": "any",
          "isOptional": false,
          "description": ""
        },
        {
          "name": "functions",
          "type": "string[]",
          "isOptional": false,
          "description": ""
        }
      ]
    },
    {
      "name": "getFallbackResponse",
      "filePath": "\\src\\services\\accessibility\\agent.ts",
      "parameters": [
        {
          "name": "error",
          "type": "any",
          "isOptional": false,
          "description": ""
        }
      ]
    },
    {
      "name": "chat",
      "filePath": "\\src\\services\\accessibility\\ollama.ts",
      "parameters": [
        {
          "name": "messages",
          "type": "Array<{ role: string, content: string }>",
          "isOptional": false,
          "description": ""
        }
      ]
    },
    {
      "name": "generateEmbedding",
      "filePath": "\\src\\services\\accessibility\\ollama.ts",
      "parameters": [
        {
          "name": "text",
          "type": "string",
          "isOptional": false,
          "description": ""
        }
      ]
    },
    {
      "name": "generateSystemPrompt",
      "filePath": "\\src\\services\\accessibility\\ollama.ts",
      "parameters": [
        {
          "name": "context",
          "type": "any",
          "isOptional": false,
          "description": ""
        }
      ]
    },
    {
      "name": "loadRegistry",
      "filePath": "\\src\\services\\accessibility\\registry.ts",
      "parameters": []
    },
    {
      "name": "validateParameters",
      "filePath": "\\src\\services\\accessibility\\registry.ts",
      "parameters": [
        {
          "name": "params",
          "type": "any[]",
          "isOptional": false,
          "description": ""
        }
      ]
    },
    {
      "name": "initialize",
      "filePath": "\\src\\services\\accessibility\\registry.ts",
      "parameters": []
    },
    {
      "name": "generateEmbeddings",
      "filePath": "\\src\\services\\accessibility\\registry.ts",
      "parameters": []
    },
    {
      "name": "generateFunctionEmbedding",
      "filePath": "\\src\\services\\accessibility\\registry.ts",
      "parameters": [
        {
          "name": "name",
          "type": "string",
          "isOptional": false,
          "description": ""
        },
        {
          "name": "meta",
          "type": "FunctionMeta",
          "isOptional": false,
          "description": ""
        }
      ]
    },
    {
      "name": "generateFunctionDescription",
      "filePath": "\\src\\services\\accessibility\\registry.ts",
      "parameters": [
        {
          "name": "meta",
          "type": "FunctionMeta",
          "isOptional": false,
          "description": ""
        }
      ]
    },
    {
      "name": "findRelevantFunctions",
      "filePath": "\\src\\services\\accessibility\\registry.ts",
      "parameters": [
        {
          "name": "query",
          "type": "string",
          "isOptional": false,
          "description": ""
        },
        {
          "name": "userAccessLevel",
          "type": "AccessLevel",
          "isOptional": false,
          "description": ""
        },
        {
          "name": "userCapabilities",
          "type": "AgentCapability[]",
          "isOptional": false,
          "description": ""
        },
        {
          "name": "limit",
          "type": "number",
          "isOptional": false,
          "description": ""
        },
        {
          "name": "minSimilarity",
          "type": "number",
          "isOptional": false,
          "description": ""
        }
      ]
    },
    {
      "name": "isAccessible",
      "filePath": "\\src\\services\\accessibility\\registry.ts",
      "parameters": [
        {
          "name": "requirement",
          "type": "AccessibilityRequirement",
          "isOptional": false,
          "description": ""
        },
        {
          "name": "userLevel",
          "type": "AccessLevel",
          "isOptional": false,
          "description": ""
        },
        {
          "name": "userCapabilities",
          "type": "AgentCapability[]",
          "isOptional": false,
          "description": ""
        }
      ]
    },
    {
      "name": "cosineSimilarity",
      "filePath": "\\src\\services\\accessibility\\registry.ts",
      "parameters": [
        {
          "name": "a",
          "type": "number[]",
          "isOptional": false,
          "description": ""
        },
        {
          "name": "b",
          "type": "number[]",
          "isOptional": false,
          "description": ""
        }
      ]
    },
    {
      "name": "getFunctionMeta",
      "filePath": "\\src\\services\\accessibility\\registry.ts",
      "parameters": [
        {
          "name": "name",
          "type": "string",
          "isOptional": false,
          "description": ""
        }
      ]
    },
    {
      "name": "getFunctionsByCapability",
      "filePath": "\\src\\services\\accessibility\\registry.ts",
      "parameters": [
        {
          "name": "capability",
          "type": "AgentCapability",
          "isOptional": false,
          "description": ""
        }
      ]
    },
    {
      "name": "getFunctionsByAccessibilityLevel",
      "filePath": "\\src\\services\\accessibility\\registry.ts",
      "parameters": [
        {
          "name": "level",
          "type": "AccessLevel",
          "isOptional": false,
          "description": ""
        }
      ]
    },
    {
      "name": "getCompatibleFunctions",
      "filePath": "\\src\\services\\accessibility\\registry.ts",
      "parameters": [
        {
          "name": "userLevel",
          "type": "AccessLevel",
          "isOptional": false,
          "description": ""
        },
        {
          "name": "userCapabilities",
          "type": "AgentCapability[]",
          "isOptional": false,
          "description": ""
        }
      ]
    },
    {
      "name": "getRegistryStats",
      "filePath": "\\src\\services\\accessibility\\registry.ts",
      "parameters": []
    },
    {
      "name": "scanProject",
      "filePath": "\\src\\tools\\scan-functions.ts",
      "parameters": [
        {
          "name": "basePath",
          "type": "string",
          "isOptional": false,
          "description": ""
        }
      ]
    },
    {
      "name": "scanDir",
      "filePath": "\\src\\tools\\scan-functions.ts",
      "parameters": [
        {
          "name": "dir",
          "type": "string",
          "isOptional": false,
          "description": ""
        }
      ]
    },
    {
      "name": "scanFile",
      "filePath": "\\src\\tools\\scan-functions.ts",
      "parameters": [
        {
          "name": "filePath",
          "type": "string",
          "isOptional": false,
          "description": ""
        }
      ]
    },
    {
      "name": "visitNode",
      "filePath": "\\src\\tools\\scan-functions.ts",
      "parameters": [
        {
          "name": "node",
          "type": "ts.Node",
          "isOptional": false,
          "description": ""
        },
        {
          "name": "filePath",
          "type": "string",
          "isOptional": false,
          "description": ""
        }
      ]
    },
    {
      "name": "extractFunctionInfo",
      "filePath": "\\src\\tools\\scan-functions.ts",
      "parameters": [
        {
          "name": "node",
          "type": "ts.FunctionDeclaration | ts.MethodDeclaration",
          "isOptional": false,
          "description": ""
        },
        {
          "name": "filePath",
          "type": "string",
          "isOptional": false,
          "description": ""
        }
      ]
    },
    {
      "name": "generateRegistryFile",
      "filePath": "\\src\\tools\\scan-functions.ts",
      "parameters": [
        {
          "name": "outputPath",
          "type": "string",
          "isOptional": false,
          "description": ""
        }
      ]
    },
    {
      "name": "main",
      "filePath": "\\src\\tools\\scan-functions.ts",
      "parameters": []
    }
  ]
}